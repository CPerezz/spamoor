{
  "language": "Solidity",
  "sources": {
    "CREATE2Factory.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract CREATE2Factory {\n    event ContractDeployed(address indexed deployedAddress, bytes32 indexed salt);\n    \n    function deploy(bytes32 salt, bytes calldata initCode) external payable returns (address) {\n        address deployedAddress;\n        bytes memory code = initCode;\n        \n        // create2(value, code, salt)\n        assembly {\n            deployedAddress := create2(callvalue(), add(code, 0x20), mload(code), salt)\n        }\n        \n        require(deployedAddress != address(0), \"Deployment failed\");\n        emit ContractDeployed(deployedAddress, salt);\n        return deployedAddress;\n    }\n    \n    function predictAddress(bytes32 salt, bytes32 initCodeHash) external view returns (address) {\n        return address(uint160(uint256(keccak256(abi.encodePacked(\n            bytes1(0xff),\n            address(this),\n            salt,\n            initCodeHash\n        )))));\n    }\n}"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "": [
          "ast"
        ],
        "*": [
          "abi",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.legacyAssembly",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "evm.gasEstimates",
          "evm.assembly"
        ]
      }
    },
    "remappings": []
  }
}
