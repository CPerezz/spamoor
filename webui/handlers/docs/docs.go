// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/scenarios": {
            "get": {
                "description": "Returns a list of all scenarios",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Scenario"
                ],
                "summary": "Get all scenarios",
                "operationId": "getScenarios",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.ScenarioEntries"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Failure",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/scenarios/{name}/config": {
            "get": {
                "description": "Returns the default configuration for a specific scenario",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Scenario"
                ],
                "summary": "Get scenario configuration",
                "operationId": "getScenarioConfig",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Scenario name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "YAML configuration",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Scenario not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/spammer": {
            "post": {
                "description": "Creates a new spammer with the given configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spammer"
                ],
                "summary": "Create a new spammer",
                "operationId": "createSpammer",
                "parameters": [
                    {
                        "description": "Spammer configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateSpammerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spammer ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/spammer/{id}": {
            "get": {
                "description": "Returns detailed information about a specific spammer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spammer"
                ],
                "summary": "Get spammer details",
                "operationId": "getSpammerDetails",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Spammer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api.SpammerDetails"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid spammer ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Spammer not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing spammer's configuration",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Spammer"
                ],
                "summary": "Update a spammer",
                "operationId": "updateSpammer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Spammer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateSpammerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Spammer not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a spammer and stops it if running",
                "tags": [
                    "Spammer"
                ],
                "summary": "Delete a spammer",
                "operationId": "deleteSpammer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Spammer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid spammer ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Spammer not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/spammer/{id}/logs": {
            "get": {
                "description": "Returns the most recent logs for a specific spammer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spammer"
                ],
                "summary": "Get spammer logs",
                "operationId": "getSpammerLogs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Spammer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.LogEntry"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid spammer ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Spammer not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/spammer/{id}/logs/stream": {
            "get": {
                "description": "Streams logs for a specific spammer using Server-Sent Events",
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "Spammer"
                ],
                "summary": "Stream spammer logs",
                "operationId": "streamSpammerLogs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Spammer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Timestamp to start from (RFC3339Nano)",
                        "name": "since",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SSE stream of log entries",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid spammer ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Spammer not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Streaming unsupported",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/spammer/{id}/pause": {
            "post": {
                "description": "Pauses a running spammer",
                "tags": [
                    "Spammer"
                ],
                "summary": "Pause a spammer",
                "operationId": "pauseSpammer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Spammer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid spammer ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Spammer not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/spammer/{id}/start": {
            "post": {
                "description": "Starts a specific spammer",
                "tags": [
                    "Spammer"
                ],
                "summary": "Start a spammer",
                "operationId": "startSpammer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Spammer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid spammer ID",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Spammer not found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/spammers": {
            "get": {
                "description": "Returns a list of all configured spammers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spammer"
                ],
                "summary": "Get all spammers",
                "operationId": "getSpammerList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api.SpammerListEntry"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.CreateSpammerRequest": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scenario": {
                    "type": "string"
                },
                "startImmediately": {
                    "type": "boolean"
                }
            }
        },
        "api.LogEntry": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "level": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "api.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                }
            }
        },
        "api.ScenarioEntries": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.SpammerDetails": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scenario": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "api.SpammerListEntry": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "RFC3339Nano formatted timestamp",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scenario": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "api.UpdateSpammerRequest": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
